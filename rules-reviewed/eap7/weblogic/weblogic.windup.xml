<?xml version="1.0"?>
<ruleset xmlns="http://windup.jboss.org/schema/jboss-ruleset" id="weblogic-eap7-eap7" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://windup.jboss.org/schema/jboss-ruleset http://windup.jboss.org/schema/jboss-ruleset/windup-jboss-ruleset.xsd">

    <metadata>
        <description>
            This ruleset provides analysis of Oracle WebLogic Server proprietary classes and constructs that might require individual attention when migrating to JBoss EAP 7+.
        </description>
        <dependencies>
            <addon id="org.jboss.windup.rules,windup-rules-javaee,2.7.0.Final" />
            <addon id="org.jboss.windup.rules,windup-rules-java,2.7.0.Final" />
        </dependencies>
        <sourceTechnology id="weblogic" />
        <targetTechnology id="eap" versionRange="[7,8)" />
        <tag>weblogic</tag>
    </metadata>
    <rules>
        <rule id="weblogic-eap7-01000">
            <when>
                <javaclass references="weblogic.time.common.Triggerable">
                    <location>IMPLEMENTS_TYPE</location>
                </javaclass>
            </when>
            <perform>
                <classification issue-display-mode="detail-only" title="WebLogic scheduled job" effort="0">
                    <tag>scheduler</tag>
                    <tag>ejb</tag>
                    <tag>timer</tag>
                    <tag>weblogic</tag>
                </classification>
                <hint title="Oracle WebLogic Server proprietary scheduled jobs" effort="3" category-id="mandatory">
                    <message>
                      <![CDATA[
                      This application contains Oracle WebLogic Server proprietary scheduled jobs.
                      
                      Recommendation:
                      
                      Migrate Oracle WebLogic Server proprietary scheduled jobs to the EJB standard `javax.ejb.TimerService`.
                      ]]>
                    </message>
                    <link href="https://docs.oracle.com/javaee/7/tutorial/ejb-basicexamples004.htm" title="Java EE 7 - Using TimerService"/>
                    <tag>scheduler</tag>
                    <tag>ejb</tag>
                    <tag>timer</tag>
                    <tag>weblogic</tag>
                </hint>
            </perform>
        </rule>
        <rule id="weblogic-eap7-02000">
            <when>
                <javaclass references="weblogic.utils.StringUtils.{*}" />
            </when>
            <perform>
                <hint title="Oracle WebLogic Server proprietary StringUtils usage" effort="1" category-id="mandatory">
                    <message>This application contains Oracle WebLogic Server proprietary `StringUtils`.
                        
                        Recommendation:
                        
                        Replace Oracle WebLogic Server proprietary `StringUtils` with the Apache Commons `StringUtils` class.</message>
                    <link href="https://commons.apache.org/proper/commons-lang/" title="Apache Commons Lang" />
                    <tag>weblogic</tag>
                </hint>
            </perform>
        </rule>
        <rule id="weblogic-eap7-03000">
            <when>
                <javaclass references="weblogic.apache.xml.{*}" />
            </when>
            <perform>
                <hint title="Oracle WebLogic Server specific Apache Commons XML package" effort="1" category-id="mandatory">
                    <message>This application contains the Oracle WebLogic Server specific Apache XML package.
                            
                            Recomendation:
                            
                            Replace code that uses the Oracle WebLogic Server specific Apache XML package with code that uses the `org.apache.xml` package from [Apache Xerces](http://xerces.apache.org/).
                    </message>
                    <tag>weblogic</tag>
                </hint>
            </perform>
        </rule>
        <rule id="weblogic-eap7-04000">
            <when>
                <javaclass references="weblogic.transaction.{classname}" />
            </when>
            <perform>
                <hint title="Oracle WebLogic Server proprietary TransactionManager usage" effort="1" category-id="mandatory">
                    <message>This application contains the Oracle WebLogic Server proprietary `TransactionManager`.
                            
                            Recommendation:
                            
                            Replace the Oracle WebLogic Server proprietary `TransactionManager` with the Java EE standard [javax.transaction.TransactionManager](http://docs.oracle.com/javaee/7/api/javax/transaction/TransactionManager.html)</message>
                    <link href="https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/7.0/single/development-guide/#java_transaction_api_jta" title="JBoss EAP - Java Transaction API (JTA)" />
                    <link href="http://docs.oracle.com/javaee/7/api/javax/transaction/TransactionManager.html" title="Java Enterprise Edition 7 - TransactionManager" />
                    <tag>transactions</tag>
                    <tag>weblogic</tag>
                </hint>
            </perform>
            <where param="classname">
                <matches pattern="(Client)*TransactionManager" />
            </where>
        </rule>
        <rule id="weblogic-eap7-05000">
            <when>
                <or>
                    <javaclass references="weblogic.transaction.TransactionManager.resume{*}">
                        <location>METHOD_CALL</location>
                    </javaclass>
                    <javaclass references="weblogic.transaction.TransactionManager.forceResume{*}">
                        <location>METHOD_CALL</location>
                    </javaclass>
                    <javaclass references="weblogic.transaction.ClientTransactionManager.resume{*}">
                        <location>METHOD_CALL</location>
                    </javaclass>
                    <javaclass references="weblogic.transaction.ClientTransactionManager.forceResume{*}">
                        <location>METHOD_CALL</location>
                    </javaclass>
                </or>
            </when>
            <perform>
                <hint title="Oracle WebLogic Server proprietary TransactionManager usage of resume method" effort="1" category-id="mandatory">
                    <message>This application contains the Oracle WebLogic Server proprietary `TransactionManager`.
                            
                            Recomendation:
                            
                            Replace the Oracle WebLogic Server proprietary `TransactionManager`with the Java EE standard method `javax.transaction.TransactionManager.resume(Transaction tx)`.</message>
                    <tag>transactions</tag>
                    <tag>weblogic</tag>
                </hint>
            </perform>
        </rule>
        <rule id="weblogic-eap7-06000">
            <when>
                <or>
                    <javaclass references="weblogic.transaction.TransactionManager.suspend{*}">
                        <location>METHOD_CALL</location>
                    </javaclass>
                    <javaclass references="weblogic.transaction.TransactionManager.forceSuspend{*}">
                        <location>METHOD_CALL</location>
                    </javaclass>
                    <javaclass references="weblogic.transaction.ClientTransactionManager.suspend{*}">
                        <location>METHOD_CALL</location>
                    </javaclass>
                    <javaclass references="weblogic.transaction.ClientTransactionManager.forceSuspend{*}">
                        <location>METHOD_CALL</location>
                    </javaclass>
                </or>
            </when>
            <perform>
                <hint title="Oracle WebLogic Server proprietary TransactionManager usage of suspend method" effort="1" category-id="mandatory">
                    <message>Ths application uses the `suspend` method of the Oracle WebLogic Server proprietary `TransactionManager`.
                            
                            Recomendation:
                            
                            Replace the `suspend` method of the Oracle WebLogic Server proprietary `TransactionManager` with the Java EE standard `javax.transaction.TransactionManager.suspend()`.</message>
                    <tag>transactions</tag>
                    <tag>weblogic</tag>
                </hint>
            </perform>
        </rule>
        <rule id="weblogic-eap7-07000">
            <when>
                <javaclass references="weblogic.transaction.TxHelper">
                    <location>IMPORT</location>
                </javaclass>
            </when>
            <perform>
                <hint title="WebLogic TxHelper usage" effort="1" category-id="mandatory">
                    <message>This application contains the Oracle WebLogic Server proprietary `weblogic.transaction.TxHelper` import statement.
                    
                    Recommendation:
                
                    Remove the Oracle WebLogic Server proprietary `weblogic.transaction.TxHelper` import statement.</message>
                    <tag>transactions</tag>
                    <tag>weblogic</tag>
                    <quickfix name="TxHelper" type="DELETE_LINE">
                        <search>weblogic.transaction.TxHelper</search>
                    </quickfix>
                </hint>
            </perform>
        </rule>
        <rule id="weblogic-eap7-08000">
            <when>
                <javaclass references="weblogic.transaction.{classname}.getTransactionManager()">
                    <location>METHOD_CALL</location>
                </javaclass>
            </when>
            <perform>
                <iteration>
                    <hint title="Oracle WebLogic Server proprietary ClientTxHelper" effort="1">
                        <message>
                            <![CDATA[
                            This application contains the Oracle WebLogic Server proprietary `ClientTxHelper` is not suitable for migration.
                                    
                            Recommendation:
    
                            Look up the Java Enterprise Edition `javax.transaction.TransactionManager` in JBoss EAP using the following code and then replace`ClientTxHelper` with the result:

                            ```java
                            InitialContext context = new InitialContext();
                            TransactionManager transactionManager =
                            (TransactionManager)context.lookup("java:jboss/TransactionManager");
                            ```
                            ]]>
                        </message>
                        <tag>transactions</tag>
                        <tag>weblogic</tag>
                    </hint>
                </iteration>
            </perform>
            <where param="classname">
                <matches pattern="(Client)*TxHelper" />
            </where>
        </rule>
        <rule id="weblogic-eap7-09000">
            <when>
                <javaclass references="weblogic.jdbc.vendor.oracle.OracleThinClob" />
            </when>
            <perform>
                <hint title="Oracle WebLogic Server proprietary interface Clob JDBC (OracleThinClob)" effort="1" category-id="mandatory">
                    <message>
                        This application contains the Oracle WebLogic Server proprietary interface Clob `OracleThinClob`.
                        
                        Recommendation:
                        
                        Replace the Oracle WebLogic Server proprietary interface Clob `OracleThinClob` by using the `java.sql.Clob` interface.
                    </message>
                    <link href="https://docs.oracle.com/database/121/JAJDB/oracle/jdbc/class-use/OracleClob.html" title="Oracle JDBC Documentation" />
                    <link href="http://docs.oracle.com/javase/7/docs/api/java/sql/Clob.html" title="java.sql Interface Clob " />
                    <tag>jdbc</tag>
                    <tag>weblogic</tag>
            </hint>
            </perform>
        </rule>
        <rule id="weblogic-eap7-10000">
            <when>
                <javaclass references="weblogic.jdbc.vendor.oracle.OracleThinClob.getCharacterOutputStream()" />
            </when>
            <perform>
                <hint title="Oracle WebLogic Server proprietary JDBC code" effort="1" category-id="mandatory">
                    <message>
                        This application contains Oracle WebLogic Server proprietary JDBC code.
                        
                        Recommendation:
                        
                        Replace the Oracle WebLogic Server proprietary JDBC code with `java.sql.Clob.setCharacterStream(1)`
                    </message>
                    <link href="https://docs.oracle.com/database/121/JAJDB/oracle/jdbc/class-use/OracleClob.html" title="Oracle JDBC Documentation" />
                    <link href="http://docs.oracle.com/javase/7/docs/api/java/sql/Clob.html" title="java.sql.Clob interface" />
                    <tag>jdbc</tag>
                    <tag>weblogic</tag>
                </hint>
            </perform>
        </rule>
        <rule id="weblogic-eap7-11000">
            <when>
                <javaclass references="weblogic.i18n.logging.NonCatalogLogger{*}">
                    <location>METHOD_CALL</location>
                    <location>CONSTRUCTOR_CALL</location>
                </javaclass>
            </when>
            <perform>
                <hint title="Oracle WebLogic Server proprietary logger (NonCatalogLogger)" effort="1" category-id="mandatory">
                    <message>
                      <![CDATA[
                      This applications contains the Oracle WebLogic Server proprietary logger `NonCatalogLogger`.
                      
                      Recommendation:
                      
                      Migrate the Oracle WebLogic Server proprietary logger `NonCatalogLogger` to a supported logging framework,
                      such as the JDK Logger or JBoss Logging.
                      
                      Example code:
                      
                      ```java
                      import java.util.logging.Logger;
                      Logger LOG = Logger.getLogger("MyLogger");
                      ```
                      ]]>
                    </message>
                    <link href="https://docs.oracle.com/javase/7/docs/technotes/guides/logging/overview.html" title="JDK Logging Documentation" />
                    <link href="https://developers.redhat.com/quickstarts/eap/logging/" title="JBoss Logging Quickstart" />
                    <tag>logging</tag>
                    <tag>weblogic</tag>
                </hint>
            </perform>
        </rule>
        <rule id="weblogic-eap7-12000">
            <when>
                <xmlfile matches="/jdbc-data-source/jdbc-driver-params/property/name[text()='FastConnectionFailoverEnabled']">
                </xmlfile>
            </when>
            <perform>
                <hint title="Oracle Fast Connection Failover" effort="1" category-id="mandatory">
                    <message>
                      <![CDATA[
                      This application uses Oracle Fast Connection Failover.
                      
                      Recommendation:
                      
                      Supply a URL such as the following to the Oracle JDBC driver so the driver provides transparent load-balancing and fail-over:
                      ```
                      <xa-datasource-property name="URL">jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(LOAD_BALANCE=ON)(FAILOVER=ON)(ADDRESS=(PROTOCOL=TCP)(HOST=my.host.org)(PORT=1521))(ADDRESS=(PROTOCOL=TCP)(HOST=my.host.org)(PORT=1521)))(CONNECT_DATA=(SERVICE_NAME=servjboss)(failover_mode=(type=select)(method=basic)))</xa-datasource-property>
                      ```
                      ]]>
                    </message>
                    <link href="https://access.redhat.com/articles/1329233" title="Implement Oracle Fast Connection Failover (FCF) in Red Hat JBoss Enterprise Application Platform 6 or 7" />
                    <tag>jdbc</tag>
                    <tag>weblogic</tag>
                </hint>
            </perform>
        </rule>
        <rule id="weblogic-eap7-13000">
            <when>
                <filecontent filename="MANIFEST.MF" pattern="Weblogic-Application-Version:" />
            </when>
            <perform>
                <hint title="Oracle WebLogic Server proprietary side-by-side redeployment configuration" effort="3" category-id="mandatory">
                    <message>
                      <![CDATA[
                      This application contains an Oracle WebLogic Server proprietary side-by-side production redeployment feature.
                      
                      Recommendation: 

                      In JBoss EAP, either deploy the new application to a secondary server group or cluster or deploy the new application serially to the same clustered domain.
                      ]]>
                  </message>
                    <link href="https://access.redhat.com/articles/1329253" title="Replace WebLogic side-by-side production redeployment in EAP 6" />
                    <tag>weblogic</tag>
                </hint>
            </perform>
        </rule>
        <rule id="weblogic-eap7-15000">
            <when>
                <filecontent filename="{*}.{ext}" pattern="oracle.net.wallet_location" />
            </when>
            <perform>
                <hint title="WebLogic Oracle Wallet" effort="3" category-id="mandatory">
                    <message>
                      <![CDATA[
                      This application contains a WebLogic Oracle Wallet.
                      
                      Recommendation: 

                      Convert each WebLogic Oracle Wallet to a standard Java KeyStore (JKS) entry that can then be used to configure the credentials in JBoss EAP 7.
                      ]]>
                    </message>
                    <link href="https://access.redhat.com/articles/1329073" title="Replace WebLogic Oracle Wallets When Migrating to Red Hat JBoss Enterprise Application Platform 6" />
                    <tag>weblogic</tag>
                </hint>
            </perform>
            <where param="ext">
                <matches pattern="(java|properties|xml)" />
            </where>
        </rule>

        <rule id="weblogic-eap7-016000">
            <when>
                <!-- https://issues.jboss.org/browse/WINDUP-615 -->
                <filecontent filename="{*}.{ext}" pattern="weblogic.jndi.WLInitialContextFactory" />
            </when>
            <perform>
                <hint title="Oracle WebLogic Server proprietary InitialContextFactory" effort="3" category-id="mandatory">
                    <message>
                    <![CDATA[
                    This application contains the Oracle WebLogic Server proprietary `weblogic.jndi.WLInitialContextFactory`, which is an implementation of `InitialContextFactory`.
                    
                    Recommendation: 

                    Configure the equivalent functionality in JBoss EAP 7 using `org.jboss.naming.remote.client.InitialContextFactory`. You can then instanticate the context as follows: `InitialContext ctx = new InitialContext();`.
                    ]]>
                    </message>
                    <link href="https://access.redhat.com/solutions/161543" title="Calling JMS resources and EJB in EAP 6 from Weblogic" />
                    <link href="https://access.redhat.com/solutions/396853" title="How to configure an EJB client in JBoss EAP 6" />
                    <tag>configuration</tag>
                    <tag>weblogic</tag>
                </hint>
            </perform>
            <where param="ext">
                <matches pattern="(java|properties|xml)" />
            </where>
        </rule>

        <rule id="weblogic-eap7-017000">
            <when>
                <!-- https://issues.jboss.org/browse/WINDUP-615 -->
                <filecontent filename="{*}.{ext}" pattern="{t3url}" />
            </when>
            <perform>
                <hint title="Oracle WebLogic RMI with T3 JNDI binding" effort="3" category-id="mandatory">
                    <message>
                    <![CDATA[
                    This application contains Oracle Weblogic’s  `t3://` and `t3s://` URLs.
                    
                    Recommendation:
                    
                    In JBoss EAP 7, use standard Java EE JNDI names unless connectivity to Oracle WebLogic Server is still required. In that case, use an appropriate Oracle WebLogic Server proprietary library.
                    ]]>
                    </message>
                    <link href="https://docs.oracle.com/cd/E24329_01/web.1211/e24389/rmi_t3.htm#WLRMI143" title="Using WebLogic RMI with T3 Protocol" />
                    <link href="https://access.redhat.com/solutions/1230143" title="Invoking EJBs deployed on WebLogic from EAP6" />
                    <tag>configuration</tag>
                    <tag>weblogic</tag>
                </hint>
            </perform>
            <where param="ext">
                <matches pattern="(java|properties|xml)" />
            </where>
            <where param="t3url">
                <matches pattern="t3s?://" />
            </where>
        </rule>
    </rules>
</ruleset>
